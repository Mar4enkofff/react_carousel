{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","_ref","images","step","frameSize","itemWidth","animationDuration","infinite","_useState","useState","_useState2","_slicedToArray","currentImage","setCurrentImage","imageRigth","imageLeft","length","widthCarousel","isEnd","isStart","_jsxs","className","children","_jsx","style","width","concat","map","image","transform","transition","src","alt","cn","type","onClick","nextImage","App","state","setStep","_useState3","_useState4","setFrameSize","_useState5","_useState6","setItemWidth","_useState7","_useState8","setAnimationDuration","_useState9","_useState10","setInfinite","value","min","max","onChange","event","target","checked","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e31b5e98.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\nimport cn from 'classnames';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n}) => {\n  const [currentImage, setCurrentImage] = useState(1);\n  const imageRigth = (currentImage - 1) * itemWidth;\n  const imageLeft = images.length - frameSize + 1;\n\n  const widthCarousel = frameSize * itemWidth;\n  const isEnd = currentImage === imageLeft;\n  const isStart = currentImage === 1;\n\n  const handleNextImage = () => {\n    if (!isEnd) {\n      const nextImage = currentImage + step;\n\n      setCurrentImage(nextImage > imageLeft\n        ? imageLeft\n        : nextImage);\n    } else if (infinite) {\n      setCurrentImage(1);\n    }\n  };\n\n  const handlePrevImage = () => {\n    if (!isStart) {\n      const nextImage = currentImage - step;\n\n      setCurrentImage(nextImage < 1\n        ? 1\n        : nextImage);\n    } else if (infinite) {\n      setCurrentImage(imageLeft);\n    }\n  };\n\n  return (\n    <div className=\"Carousel\">\n      <ul\n        className=\"Carousel__list\"\n        style={{ width: `${widthCarousel}px` }}\n      >\n        {images.map(image => (\n          <li\n            key={image}\n            style={{\n              transform: `translateX(-${imageRigth}px)`,\n              transition: `${animationDuration}ms`,\n            }}\n          >\n            <img\n              src={image}\n              alt={image}\n              style={{ width: `${itemWidth}px` }}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"Carousel__buttons\">\n        <button\n          className={cn('Carousel__button', {\n            'Carousel__button--disabled': isStart && !infinite,\n          })}\n          type=\"button\"\n          onClick={handlePrevImage}\n        >\n          Prev\n        </button>\n        <button\n          className={cn('Carousel__button', {\n            'Carousel__button--disabled': isEnd && !infinite,\n          })}\n          type=\"button\"\n          data-cy=\"next\"\n          onClick={handleNextImage}\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React, { useState } from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nconst App: React.FC = () => {\n  const state: State = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  const [step, setStep] = useState(3);\n  const [frameSize, setFrameSize] = useState(3);\n  const [itemWidth, setItemWidth] = useState(130);\n  const [animationDuration, setAnimationDuration] = useState(1000);\n  const [infinite, setInfinite] = useState(false);\n\n  const handleStep = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setStep(+event.target.value);\n  };\n\n  const handleFrameSize = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setFrameSize(+event.target.value);\n  };\n\n  const handleItemWidth = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setItemWidth(+event.target.value);\n  };\n\n  const handleAnimationDuration = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setAnimationDuration(+event.target.value);\n  };\n\n  const handleInfinite = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInfinite(!!event.target.checked);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"App__title\" data-cy=\"title\">\n        Carousel with\n        {' '}\n        {state.images.length}\n        {' '}\n        images\n      </h1>\n      <div className=\"App__inputs\">\n        <label>\n          Step:\n          <input\n            type=\"number\"\n            value={step}\n            min={1}\n            max={10}\n            onChange={handleStep}\n          />\n        </label>\n\n        <label>\n          Frame Size:\n          <input\n            type=\"number\"\n            value={frameSize}\n            min={1}\n            max={state.images.length}\n            onChange={handleFrameSize}\n          />\n        </label>\n\n        <label>\n          Item Width:\n          <input\n            type=\"number\"\n            value={itemWidth}\n            onChange={handleItemWidth}\n          />\n        </label>\n\n        <label>\n          Animation Duration:\n          <input\n            type=\"number\"\n            min={1000}\n            max={3000}\n            value={animationDuration}\n            onChange={handleAnimationDuration}\n          />\n        </label>\n\n        <label>\n          Infinite:\n          <input\n            type=\"checkbox\"\n            checked={infinite}\n            onChange={handleInfinite}\n          />\n        </label>\n      </div>\n\n      <Carousel\n        images={state.images}\n        step={step}\n        frameSize={frameSize}\n        itemWidth={itemWidth}\n        animationDuration={animationDuration}\n        infinite={infinite}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}